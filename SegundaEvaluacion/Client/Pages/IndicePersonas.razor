@page "/personas"
@inject IHttpService http
<h2>Personas</h2>
<br />
<a class="btn btn-primary" href="Personas/crear">Nuevo</a>
<br />
<table>
    <tr>
        <th>DNI</th>
        <th>Nombre</th>
        <th>Apellido</th>
        <th>Nacimiento</th>
        <th>Nacionalidad</th>
    </tr>
    @if (personas == null)
    {
        <tr>Cargando.....</tr>
    }
    else if (personas.Count == 0)
    {
        <tr>No existen Personas</tr>
    }
    else
    {
        @foreach (var item in personas)
        {
            <tr>
                <td>@item.dni</td>
                <td>@item.nombre</td>
                <td>@item.apellido</td>
                <td>@item.fecha_nacimiento</td>
                <td>@item.Nacionalidad</td>


                <td>
                    <a class="btn btn-success"
                       href="Personas/editar/@item.Id">
                        Editar
                    </a>
                </td>
                <td><button class="btn btn-warning" @onclick="()=>Eliminar(item)">Eliminar</button></td>
            </tr>
        }
    }
</table>

<Confirmacion @ref="confirmacion"
              onConfirm="GrabarEliminar"
              onCancel="Cancelar"
              Titulo="BORRAR"
              textCancelar="Salir"
              textOk="Aceptar">
    <div>¿Desea eliminar a  @eliminarpersona.nombre @eliminarpersona.apellido ?</div>
</Confirmacion>


@code {
    List<SegundaEvaluacion.Shared.Datos.Entidades.Persona> personas;
    Confirmacion confirmacion;

    SegundaEvaluacion.Shared.Datos.Entidades.Persona eliminarpersona;

    protected override async Task OnInitializedAsync()
    {
        base.OnInitialized();
        await Leer();
    }
    private async Task Leer()
    {
        var respuestaHttp = await http.Get<List<SegundaEvaluacion.Shared.Datos.Entidades.Persona>>("api/personas");
        if (!respuestaHttp.Error)
        {
            personas = respuestaHttp.Respuesta;
        }
    }



    private void Eliminar(SegundaEvaluacion.Shared.Datos.Entidades.Persona personaEliminar)
    {
        confirmacion.Mostrar();
        eliminarpersona = personaEliminar;
    }

    private async Task GrabarEliminar()
    {
        var respuesta = await http.Delete($"api/personas/{eliminarpersona.Id}");
        if (respuesta.Error)
        {
            var body = await respuesta.GetBody();
        }
        Cancelar();
        await Leer();
    }

    private void Cancelar()
    {
        confirmacion.Ocultar();
        eliminarpersona = null;
    }

}
